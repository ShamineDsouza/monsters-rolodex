{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","monster","name","CardList","monsters","map","id","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","bind","fetch","then","response","json","users","setState","e","this","target","value","filteredMonsters","filter","toLowerCase","includes","PrimaryButton","text","onClick","allowDisabledFocus","disabled","checked","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAAe,I,YCGFA,EAAO,SAACC,GAAD,OAChB,qBAAKC,UAAU,iBAAf,SACI,6BACKD,EAAME,QAAQC,UCHdC,G,MAAY,SAAAJ,GAAK,OACtB,qBAAKC,UAAU,YAAf,SACMD,EAAMK,SAASC,KAAI,SAAAJ,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQK,WCFtBC,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OAErB,uBACIT,UAAY,SACZU,KAAK,SACLF,YAAaA,EACbG,SAAUF,M,QCuEHG,G,wDA/Cb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXT,SAAW,GACXU,YAAa,IAGf,EAAKL,aAAe,EAAKA,aAAaM,KAAlB,gBARR,E,qDAWhB,WAAoB,IAAD,OACjBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEjB,SAAUgB,S,0BAG7C,SAAaE,GACXC,KAAKF,SAAS,CAACP,YAAaQ,EAAEE,OAAOC,U,oBAGvC,WAAU,IAAD,EAE0BF,KAAKV,MAA9BT,EAFD,EAECA,SAAUU,EAFX,EAEWA,YACZY,EAAmBtB,EAASuB,QAAO,SAAA1B,GAAO,OAC5CA,EAAQC,KAAK0B,cAAcC,SAASf,EAAYc,kBAGpD,OACE,sBAAK5B,UAAU,MAAf,UAEE,cAAC,EAAD,CACEQ,YAAY,kBACZC,aAAec,KAAKd,eAEtB,cAAC,EAAD,CAAUL,SAAUsB,IACpB,cAACI,EAAA,EAAD,CAAeC,KAAK,UAAUC,QAAS,UAAWC,oBAAkB,EAACC,UAAU,EAAOC,SAAS,W,GArCnFC,cCrBHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b43988f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './card.style.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <h1>\r\n            {props.monster.name}\r\n        </h1>\r\n    </div>\r\n\r\n)","import React from 'react';\r\nimport {Card} from '../card/card.component';\r\nimport './card-list.style.css';\r\nexport const CardList  = props => (\r\n        <div className='card-list'>\r\n             {props.monsters.map(monster => (\r\n                <Card key={monster.id} monster={monster} /> \r\n            ))}\r\n            </div>\r\n)","import React from 'react';\r\nimport './search-box.style.css';\r\n\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n\r\n    <input \r\n        className = 'search'\r\n        type='search' \r\n        placeholder={placeholder} \r\n        onChange={handleChange} />\r\n);","import  React, {Component} from 'react';\nimport logo from './logo.svg';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport { Stack, IStackTokens } from '@fluentui/react';\nimport { DefaultButton, PrimaryButton } from '@fluentui/react/lib/Button';\n\nimport './App.css';\n\n\n/**export interface IButtonExampleProps {\n  // These are set based on the toggles shown above the examples (not needed in real code)\n  disabled?: boolean;\n  checked?: boolean;\n}\n// Example formatting\nconst stackTokens: IStackTokens = { childrenGap: 40 };\n\nexport const ButtonDefaultExample: React.FunctionComponent<IButtonExampleProps> = props => {\n  const { disabled, checked } = props;\n\n  return (\n    <Stack horizontal tokens={stackTokens}>\n      <DefaultButton text=\"Standard\" onClick={_alertClicked} allowDisabledFocus disabled={disabled} checked={checked} />\n      <PrimaryButton text=\"Primary\" onClick={_alertClicked} allowDisabledFocus disabled={disabled} checked={checked} />\n    </Stack>\n  );\n};\n\nfunction _alertClicked(): void {\n  alert('Clicked');\n}**/\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters : [],\n      searchField: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=> response.json())\n    .then(users => this.setState({ monsters: users  }));\n}\n\nhandleChange(e) {\n  this.setState({searchField: e.target.value })\n}\n\nrender() {\n\n  const { monsters, searchField } =this.state;\n  const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n  return (\n    <div className=\"App\">\n    \n      <SearchBox \n        placeholder='search monsters' \n        handleChange={ this.handleChange } />\n\n      <CardList monsters={filteredMonsters}></CardList>\n      <PrimaryButton text=\"Primary\" onClick={'Clicked'} allowDisabledFocus disabled={false} checked={true} />\n    </div>\n  );\n\n};\n  \n\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}